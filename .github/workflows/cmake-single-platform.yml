# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: CMake on a single platform

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Install dependencie
      run: |
        sudo apt-get update
        sudo apt-get install -y nasm clang-14 lld-14 clang-tidy-14 iwyu
        curl -L https://github.com/uchan-nos/mikanos-build/releases/download/v2.0/x86_64-elf.tar.gz -o x86_64-elf.tar.gz
        tar -xzvf x86_64-elf.tar.gz
        
    - name: Configure CMake
      run: |
        IWYU_PATH=$(which include-what-you-use)
        cmake -S kernel -B build \
              -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} \
              -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \
              -DCMAKE_C_COMPILER=clang-14 \
              -DCMAKE_CXX_COMPILER=clang++-14 \

    - name: Build
      run: | 
          cmake --build build --config ${{env.BUILD_TYPE}} 

    - name: Test
      working-directory: build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}
  
    - name: Run clang-tidy
      run: |
        OUTPUT=$(run-clang-tidy-14 -p build -header-filter='^(?!.*/x86_64-elf/).*' -quiet 2>&1 | grep -v "warnings generated")
        echo "$OUTPUT"
        if echo "$OUTPUT" | grep -E "warning:|error:"; then
          echo "clang-tidy found warnings or errors"
          exit 1
        fi

