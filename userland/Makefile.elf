CPPFLAGS += -I. -D__SCLE
CFLAGS   += -O0 -Wall -g --target=x86_64-elf -mcmodel=large
CXXFLAGS += -O0 -Wall -g --target=x86_64-elf -mcmodel=large \
            -fno-exceptions -fno-rtti -std=c++17
LDFLAGS += --entry main -z norelro --image-base 0xffff800000000000 --static -z separate-code

ifneq ("$(wildcard ../../libs/user)","")
ROOT_DIR := $(shell realpath ../../)
else
ROOT_DIR := $(shell realpath ../../../)
endif

LIB_DIR := $(ROOT_DIR)/libs/user
OBJS +=  $(LIB_DIR)/ipc.o $(LIB_DIR)/newlib_support.o $(LIB_DIR)/print.o \
		 $(LIB_DIR)/syscall.o $(LIB_DIR)/time.o $(LIB_DIR)/console.o

INCLUDES = -I./../../

.PHONY: all
all: $(TARGET)

$(TARGET): $(OBJS) Makefile
	ld.lld $(LDFLAGS) -o $@ $(OBJS) -lc -lc++ -lc++abi -lm

%.o: %.c Makefile
	clang $(CPPFLAGS) $(CFLAGS) $(INCLUDES) -c $< -o $@

%.o: %.cpp Makefile
	clang++ $(CPPFLAGS) $(CXXFLAGS) $(INCLUDES) -c $< -o $@

%.o: %.asm Makefile
	nasm -f elf64 -o $@ $<

clean:
	rm -f $(OBJS) $(TARGET)
